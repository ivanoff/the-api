import{Hono as Re} from"hono";import{RegExpRouter as $e} from"hono/router/reg-exp-router";import{resolve as Te} from"path";import ee from"flattening";import{createFactory as te} from"hono/factory";class N{c;table;schema;aliases;join;joinOnDemand;leftJoin;leftJoinDistinct;lang;translate;searchFields;requiredFields;defaultWhere;defaultWhereRaw;defaultSort;sortRaw;fieldsRaw;tokenRequired;ownerRequired;rootRequired;access;accessByStatuses;deletedReplacements;includeDeleted;hiddenFields;readOnlyFields;permissionViewableFields;permissionEditableFields;showFieldsByPermission;permissionCheckedMethods;replacedOwnerPermissions;cache;userIdFieldName;additionalFields;apiClientMethodNames;dbTables;coaliseWhere;langJoin={};coaliseWhereReplacements;user;res;isOwner;rows;relations;roles;permissions;ownerPermissions;constructor({c:e,table:s,schema:t,aliases:i,join:r,joinOnDemand:n,leftJoin:a,leftJoinDistinct:d,lang:o,translate:l,searchFields:h,hiddenFields:c,readOnlyFields:p,permissions:u,requiredFields:R,defaultWhere:g,defaultWhereRaw:y,defaultSort:S,sortRaw:A,fieldsRaw:D,tokenRequired:$,ownerRequired:E,rootRequired:v,access:P,accessByStatuses:F,dbTables:b,deletedReplacements:B,includeDeleted:f,cache:T,userIdFieldName:w,additionalFields:q,apiClientMethodNames:H,relations:x}){this.c=e,this.table=s,this.schema=t||"public",this.aliases=i||{},this.join=r||[],this.joinOnDemand=n||[],this.leftJoin=a||[],this.leftJoinDistinct=!!d,this.lang=o||"en",this.translate=l||[],this.showFieldsByPermission=u?.fields?.viewable||{},this.ownerPermissions=u?.owner?.reduce((_,m)=>({..._,[m]:!0}),{})||{},this.readOnlyFields=p||["id","timeCreated","timeUpdated","timeDeleted","isDeleted"],this.requiredFields=R||{},this.defaultWhere=g||{},this.defaultWhereRaw=y,this.defaultSort=S,this.sortRaw=A,this.fieldsRaw=D,this.tokenRequired=$?.reduce((_,m)=>({..._,[m]:!0}),{})||{},this.ownerRequired=E?.reduce((_,m)=>({..._,[m]:!0}),{})||{},this.rootRequired=v?.reduce((_,m)=>({..._,[m]:!0}),{})||{},this.access=P||{},this.accessByStatuses=F||{},this.searchFields=h||[],this.dbTables=b||{},this.deletedReplacements=B,this.includeDeleted=typeof f==="boolean"?f:!!this.deletedReplacements,this.hiddenFields=c||[],this.coaliseWhere={},this.coaliseWhereReplacements={},this.cache=T,this.userIdFieldName=w||"userId",this.additionalFields=q||{},this.apiClientMethodNames=H||{},this.relations=x}getDbWithSchema(e){const s=e(this.table);if(this.schema)s.withSchema(this.schema);return s}getTableRows(e){return e.env.dbTables[`${this.schema}.${this.table}`]||{}}sort(e,s){if(this.sortRaw)this.res.orderByRaw(this.sortRaw);const t=e||this.defaultSort;if(!t)return;t.split(",").forEach((i)=>{if(i.match(/^random\(\)$/i))return this.res.orderBy(s.raw("RANDOM()"));const r=i.match(/^(-)?(.*)$/);this.res.orderBy(r[2],r[1]&&"desc")})}pagination({_page:e,_skip:s=0,_limit:t,_unlimited:i}){if(!t||(i==="true"||i===!0))return;this.res.limit(t);const n=e?(e-1)*t:0;this.res.offset(n+ +s)}whereNotIn(e){if(!e)return;for(let[s,t]of Object.entries(e))this.res.whereNotIn(s,t)}where(e,s){if(!e)return;for(let[t,i]of Object.entries(e))if(this.langJoin[`${t}`])this.res.whereRaw(`${this.langJoin[`${t}`]} = :_value`,{_value:i,lang:this.lang});else if(this.coaliseWhere[`${t}`]||this.coaliseWhere[`${t.replace(/!$/,"")}`]){const r=t.replace(/!$/,""),n=t.match(/!$/)?"NOT":"",a=this.coaliseWhere[`${r}`],d=this.coaliseWhereReplacements;if(Array.isArray(i))for(let o of i)this.res.orWhere(function(){this.whereRaw(`${n} ${a} = :_value`,{...d,_value:o})});else this.res.whereRaw(`${n} ${a} = :_value`,{...d,_value:i})}else if(t.match(/~$/))this.res.where(t.replace(/~$/,""),"ilike",i);else if(t.match(/!$/))if(Array.isArray(i))this.res.whereNotIn(t.replace(/!$/,""),i);else this.res.whereNot(t.replace(/!$/,""),i);else if(t.match(/^_null_/)){const r=t.match(/^_null_(.+)$/);this.res.whereNull(r?.[1])}else if(t.match(/^_in_/))try{const r=t.match(/^_in_(.+)$/);this.res.whereIn(r?.[1],JSON.parse(i))}catch{throw new Error("ERROR_QUERY_VALUE")}else if(t.match(/^_not_in_/))try{const r=t.match(/^_not_in_(.+)$/);this.res.whereNotIn(r?.[1],JSON.parse(i))}catch{throw new Error("ERROR_QUERY_VALUE")}else if(t.match(/^_not_null_/)){const r=t.match(/^_not_null_(.+)$/);this.res.whereNotNull(r?.[1])}else if(t.match(/_(from|to)_/)){if(i!==""){const r=t.match(/_(from|to)_(.+)$/),n=r?.[1]==="from"?">=":"<=",a=this.coaliseWhere[`${r?.[2]}`];if(a)this.res.whereRaw(`${a} ${n} ?`,[i]);else this.res.where(`${r?.[2]}`,n,i)}}else if(Array.isArray(i))this.res.whereIn(t,i);else if(i===null)this.res.whereNull(t);else if(this.leftJoin&&!t.includes("."))this.res.where({[`${this.table}.${t}`]:i});else this.res.where(t,i)}getHiddenFields(){if(!this.roles)return{regular:this.hiddenFields,owner:this.hiddenFields};const e=this.roles.getPermissions(this.user?.roles);let s=[],t=[];for(let[n,a]of Object.entries(this.showFieldsByPermission)){if(this.roles.checkWildcardPermissions({key:n,permissions:e}))s=s.concat(a);if(this.roles.checkWildcardPermissions({key:n,permissions:this.ownerPermissions}))t=t.concat(a)}const i=this.hiddenFields?.filter((n)=>!s.includes(n))||[],r=this.hiddenFields?.filter((n)=>!t.includes(n))||[];return{regular:i,owner:r}}fields({c:e,_fields:s,_join:t,db:i,_sort:r}){let n=s&&s.split(",");if(this.leftJoin.length){if(this.leftJoin.map((o)=>this.res.leftJoin(...o)),this.leftJoinDistinct){const o=(r||this.defaultSort||"").replace(/(^|,)-/g,",").split(",").filter(Boolean);this.res.distinct(!n?[]:o.map((l)=>!n.includes(l)&&`${this.table}.${l}`).filter(Boolean))}}let a=[...this.join];if(t){const o=Array.isArray(t)?t:t.split(",");for(let l of o){const h=this.joinOnDemand.filter(({table:c,alias:p})=>l===p||l===c);if(h.length)a=a.concat(h.filter((c)=>!a.find(({table:p,alias:u})=>p===c.table&&u===c.alias)))}}if(n)a=a.filter(({table:o,alias:l})=>n.includes(o)||n.includes(l)),n=n.filter((o)=>!a.find(({table:l,alias:h})=>o===l||o===h));let d=(n||Object.keys(this.rows)).map((o)=>`${this.table}.${o}`);if(this.includeDeleted&&this.deletedReplacements&&this.rows.isDeleted)d=d.map((o)=>{const[l,h]=o.split("."),c=this.deletedReplacements[`${h}`];if(typeof c==="undefined")return o;return i.raw(`CASE WHEN "${this.table}"."isDeleted" THEN :replaceWith ELSE "${l}"."${h}" END AS ${h}`,{replaceWith:c})});for(let o of Object.keys(this.aliases))d.push(`${this.table}.${o} AS ${this.aliases[`${o}`]}`);if(this.lang&&this.lang!=="en")for(let o of this.translate)this.langJoin[`${o}`]=`COALESCE( (
          select text from langs where lang=:lang and "textKey" = any(
            select "textKey" from langs where lang='en' and text = "${this.table}"."${o}" 
          ) limit 1), name )`,d.push(i.raw(this.langJoin[`${o}`]+`AS "${o}"`,{lang:this.lang}));for(let{table:o,schema:l,as:h,where:c,whereBindings:p,alias:u,defaultValue:R,fields:g,field:y,limit:S,orderBy:A,byIndex:D,leftJoin:$}of a){if(!o&&y){d.push(i.raw(`${y} AS ${u||y}`));continue}const E=A?`ORDER BY ${A}`:"",v=S?`LIMIT ${S}`:"",P=o==="lang"&&this.lang&&this.lang.match(/^\w{2}$/)?`AND lang='${this.lang}'`:"",F=g?.map((m)=>typeof m==="string"?`'${m}', "${h||o}"."${m}"`:`'${Object.keys(m)[0]}', ${Object.values(m)[0]}`),b=F?`json_build_object(${F.join(", ")})`:`"${h||o}".*`,B=y||`jsonb_agg(${b})`,f={};if(p){if(!e)continue;const m=e.env,Z=e.req.query(),z=e.req.param(),J={...m};["db","dbWrite","dbTables","error","getErrorByMessage","log"].map((I)=>delete J[`${I}`]);const M=ee({env:J,params:z,query:Z});if(Object.values(p).filter((I)=>!M[`${I}`]).length)continue;for(let[I,X]of Object.entries(p))f[`${I}`]=M[`${X}`]}const T=!$?"":typeof $==="string"?`LEFT JOIN ${$}`:`LEFT JOIN "${$[0]}" ON ${$[1]} = ${$[2]}`,w=typeof D==="number"?`[${D}]`:"",q=!l?"":`"${l}".`,H=R?`'${R}'`:"NULL",x=`COALESCE( ( SELECT ${B} FROM (
        SELECT * FROM ${q}"${o}" AS "${h||o}"
        ${T}
        WHERE ${c} ${P}
        ${E}
        ${v}
      ) "${h||o}")${w}, ${H})`;this.coaliseWhere={...this.coaliseWhere,[`${u||o}`]:x},this.coaliseWhereReplacements={...this.coaliseWhereReplacements,...f};let _=`${x} AS "${u||o}"`;if(this.includeDeleted&&this.deletedReplacements&&this.rows.isDeleted){const m=this.deletedReplacements[`${o}`]||this.deletedReplacements[`${h}`]||this.deletedReplacements[`${u}`];if(typeof m!=="undefined")_=`CASE WHEN "${this.table}"."isDeleted" THEN ${m} ELSE ${x} END AS "${u||o}"`}d.push(i.raw(_,f))}if(e.req.query()._search&&this.searchFields.length){const o=this.searchFields.map((l)=>{return`COALESCE(${this.langJoin[`${l}`]||`"${l}"`} <-> :_search, 1)`}).join(" + ");if(d.push(i.raw(`(${o})/${this.searchFields.length} as _search_distance`,{...e.req.query(),lang:this.lang})),!r)this.res.orderBy("_search_distance","ASC")}this.res.column(d.concat(this.fieldsRaw||[]))}checkDeleted(){if(this.includeDeleted||!this.rows.isDeleted)return;this.res.where({[`${this.table}.isDeleted`]:!1})}getJoinFields(){return this.join.reduce((e,{alias:s,table:t,field:i})=>{let r=!i&&"ARRAY";if(!r)r=i.match(/::bool$/)&&"boolean";if(!r)r=i.match(/::int$/)&&"integer";if(!r)r="string";return e[s||t]=r,e},{})}deleteHiddenFieldsFromResult(e,s){if(!s)return;const t=this.user?.id&&e[`${this.userIdFieldName}`]===this.user?.id;s[t?"owner":"regular"].map((i)=>delete e[`${i}`])}optionsGet(){const e={},s={},t={},i={};for(let[n,a]of Object.entries(this.dbTables||{})){if(!a)continue;if(e[`${n}`]=a.data_type,a.data_type==="string")s[`${n}~`]=a.data_type;if(a.is_nullable==="YES")i[`_null_${n}`]="string",i[`_not_null_${n}`]="string";if(a.data_type!=="boolean"&&a.data_type!=="file")t[`_from_${n}`]=a.data_type,t[`_to_${n}`]=a.data_type,t[`_in_${n}`]=a.data_type,t[`_not_in_${n}`]=a.data_type}const r={...e,...s,...i,...t,...this.additionalFields?.get,_fields:{type:"string",example:"id,name"},_sort:{type:"string",example:"-timeCreated,name,random()"},_join:{type:"string",example:"table1,alias1"},_limit:"integer",_page:"integer",_skip:"integer",_lang:"string",...this.searchFields.length&&{_search:"string"}};return{tokenRequired:this.tokenRequired.get||this.access.read||this.accessByStatuses.read,ownerRequired:this.ownerRequired.get,rootRequired:this.rootRequired.get,joinFields:this.getJoinFields(),cache:this.cache,joinOnDemand:this.joinOnDemand,accessByStatuses:this.accessByStatuses.read,additionalFields:this.additionalFields.get,queryParameters:r,apiClientMethodNames:this.apiClientMethodNames}}async get(e){const{result:s,meta:t}=await this.getRequestResult(e);e.set("meta",t),e.set("result",s),e.set("relationsData",this.relations)}async getRequestResult(e,s){const{db:t,roles:i}=e.env,{user:r}=e.var;this.roles=i,this.user=r;const n=s||e.req.queries();let a={};for(let[f,T]of Object.entries(n))a[`${f}`]=T?.length===1?T[0]:T;const{_fields:d,_sort:o,_page:l,_skip:h,_limit:c,_unlimited:p,_after:u,_lang:R,_search:g,_join:y,...S}=a;if(R)this.lang=R;if(this.rows=this.getTableRows(e),this.res=this.getDbWithSchema(e.env.db),this.fields({c:e,_fields:d,_join:y,db:t,_sort:o}),this.where({...this.defaultWhere,...S},t),this.defaultWhereRaw){const f=this.defaultWhereRaw;this.res.andWhere(function(){this.whereRaw(f)})}if(g&&this.searchFields.length){const f=this.searchFields.map((w)=>{return`${this.langJoin[`${w}`]||`"${w}"`} % :_search`}).join(" OR "),T=this.lang;this.res.andWhere(function(){this.whereRaw(f,{_search:g,lang:T})})}this.checkDeleted();const A=+(await t.from({w:this.res}).count("*"))[0].count;this.sort(o,t);const D=o||this.defaultSort,$=D?.replace(/^-/,"");if(u&&c&&D&&this.getTableRows(e)[`${$}`])this.res.where($,D[0]==="-"?"<":">",u),this.res.limit(c);else this.pagination({_page:l,_skip:h,_limit:c,_unlimited:p});const E=await this.res,v=E?.at(-1)?.[`${$}`],P=D?.[0]==="-"?"000":"999",F=v instanceof Date?new Date(v).toISOString().replace("Z",`${P}Z`):v;let b={total:A};if(u)b={...b,after:u,nextAfter:F?encodeURIComponent(F):void 0},b={...b,isFirstPage:!1,isLastPage:!E.length||E.length<c};else{const f=+c,T=+h||0,w=+l||1,q=!f?1:Math.ceil((A-T)/f);b={...b,limit:f,skip:T,page:w,pages:q,nextAfter:w===1&&F?encodeURIComponent(F):void 0,nextPage:w>=q?void 0:w+1,isFirstPage:w<=1,isLastPage:w>=q}}const B=this.getHiddenFields();if(B)for(let f=0;f<E.length;f++)this.deleteHiddenFieldsFromResult(E[f],B);return{result:E,meta:b}}optionsGetById(){return{tokenRequired:this.tokenRequired.get||this.access.read||this.accessByStatuses.read,ownerRequired:this.ownerRequired.get,rootRequired:this.rootRequired.get,joinFields:this.getJoinFields(),joinOnDemand:this.joinOnDemand,accessByStatuses:this.accessByStatuses.read,additionalFields:this.additionalFields.get,cache:this.cache,apiClientMethodNames:this.apiClientMethodNames}}async getById(e){const{db:s,roles:t}=e.env;this.roles=t,this.user=e.var.user;const{id:i}=e.req.param(),{_fields:r,_lang:n,_join:a,...d}=e.req.query(),o=Object.keys(d).reduce((h,c)=>{if(c[0]!=="_"){const p=this.dbTables?.[`${c}`]?.data_type==="integer",u=[].concat(d[`${c}`]).find((R)=>Number.isNaN(+R));if(p&&u)throw new Error("INTEGER_REQUIRED");h[`${c}`]=d[`${c}`]}return h},{});if(this.lang=n,this.rows=this.getTableRows(e),this.res=this.getDbWithSchema(e.env.db),this.dbTables?.id?.data_type==="integer"&&Number.isNaN(+i))throw new Error("INTEGER_REQUIRED");this.where({...o,[`${this.table}.id`]:i},s),this.checkDeleted(),this.fields({c:e,_fields:r,_join:a,db:s});const l=await this.res.first();this.deleteHiddenFieldsFromResult(l,this.getHiddenFields()),e.set("result",l),e.set("relationsData",this.relations)}updateIncomingData(e,s){return Array.isArray(s)?s.map((t)=>this.updateData(e,t)):this.updateData(e,s)}updateData(e,s){const{user:t}=e.var;let i={...s};const r=this.getTableRows(e);for(let[n,a]of Object.entries(this.requiredFields))if(!i[`${n}`])throw new Error(a);for(let n of this.readOnlyFields)delete i[`${n}`];i={...e.req.param(),...i};for(let n of Object.keys(i)){if(r[`${n}`]&&typeof i[`${n}`]!=="undefined")continue;delete i[`${n}`]}if(r.userId&&t)i.userId=t.id;return i}optionsAdd(){const e=Object.entries(this.dbTables||{}).reduce((s,[t,i])=>{return this.readOnlyFields.includes(t)?s:{...s,[t]:i}},this.additionalFields?.add||{});return{tokenRequired:this.tokenRequired.add||this.access.create||this.accessByStatuses.create,ownerRequired:this.ownerRequired.add,rootRequired:this.rootRequired.add,readOnlyFields:this.readOnlyFields,requiredFields:Object.keys(this.requiredFields),accessByStatuses:this.accessByStatuses.add,apiClientMethodNames:this.apiClientMethodNames,schema:e}}async add(e){const s=await e.req.json(),t=Object.keys(s),r=t.length&&t.every((d,o)=>o===+d)?Object.values(s):s,n=this.updateIncomingData(e,r);for(let d of Object.keys(n)){const o=this.dbTables?.[`${d}`]?.data_type==="integer",l=[].concat(n[`${d}`]).find((h)=>h&&Number.isNaN(+h));if(o&&l)throw new Error("INTEGER_REQUIRED");n[`${d}`]=n[`${d}`]??null}const a=await this.getDbWithSchema(e.env.dbWrite).insert(n).returning("*");e.set("result",a[0]),e.set("relationsData",this.relations)}optionsUpdate(){const e=Object.entries(this.dbTables||{}).reduce((s,[t,i])=>{return this.readOnlyFields.includes(t)?s:{...s,[t]:i}},this.additionalFields?.update||{});return{tokenRequired:this.tokenRequired.update||this.access.update||this.accessByStatuses.update,ownerRequired:this.ownerRequired.update,rootRequired:this.rootRequired.update,readOnlyFields:this.readOnlyFields,accessByStatuses:this.accessByStatuses.update,additionalFields:this.additionalFields.update,apiClientMethodNames:this.apiClientMethodNames,schema:e}}async update(e){const{db:s}=e.env,t={...e.req.param()};if(this.dbTables?.id?.data_type==="integer"&&Number.isNaN(+t.id))throw new Error("INTEGER_REQUIRED");const i=this.getTableRows(e);if(i.isDeleted)t.isDeleted=!1;const r=await e.req.json();for(let n of this.readOnlyFields)delete r[`${n}`];if(Object.keys(r).length){if(i.timeUpdated)r.timeUpdated=s.fn.now();await this.getDbWithSchema(e.env.dbWrite).update(r).where(t)}await this.getById(e)}optionsDelete(){return{tokenRequired:this.tokenRequired.delete||this.access.delete||this.accessByStatuses.delete,ownerRequired:this.ownerRequired.delete,rootRequired:this.rootRequired.delete,accessByStatuses:this.accessByStatuses.delete,apiClientMethodNames:this.apiClientMethodNames}}async delete(e){const{user:s}=e.var,t={...e.req.param()};if(this.dbTables?.id?.data_type==="integer"&&Number.isNaN(+t.id))throw new Error("INTEGER_REQUIRED");const i=this.getTableRows(e);if(i.isDeleted)t.isDeleted=!1;const r=this.getDbWithSchema(e.env.dbWrite).where(t),n=i.isDeleted?await r.update({isDeleted:!0}):await r.delete();e.set("result",{ok:!0}),e.set("meta",{countDeleted:n})}}var se=te();class O{routes=[];routesPermissions={};routesErrors={};migrationDirs;constructor(e){const{migrationDirs:s}=e||{};if(s)this.migrationDirs=s}pushToRoutes({method:e,path:s,fnArr:t}){for(let i of t){const r=se.createHandlers(i);this.routes.push({path:s,method:e,handlers:r})}}get(e,...s){this.pushToRoutes({method:"GET",path:e,fnArr:s})}post(e,...s){this.pushToRoutes({method:"POST",path:e,fnArr:s})}patch(e,...s){this.pushToRoutes({method:"PATCH",path:e,fnArr:s})}put(e,...s){this.pushToRoutes({method:"PUT",path:e,fnArr:s})}delete(e,...s){this.pushToRoutes({method:"DELETE",path:e,fnArr:s})}use(e,...s){this.pushToRoutes({path:e,fnArr:s})}crud(e){const{table:s,prefix:t,permissions:i}=e,r=`/${t||s}`.replace(/^\/+/,"/");if(this.get(`${r}`,async(n)=>{await new N(e).get(n)}),this.post(`${r}`,async(n)=>{await new N(e).add(n)}),this.get(`${r}/:id`,async(n)=>{await new N(e).getById(n)}),this.put(`${r}/:id`,async(n)=>{await new N(e).update(n)}),this.patch(`${r}/:id`,async(n)=>{await new N(e).update(n)}),this.delete(`${r}/:id`,async(n)=>{await new N(e).delete(n)}),i?.protectedMethods){const n=(d,o)=>{const l=`${o} ${d}`;if(!this.routesPermissions[`${l}`])this.routesPermissions[`${l}`]=[];this.routesPermissions[`${l}`].push(`${r.replace(/^\//,"")}.${o.toLowerCase()}`)},a=i?.protectedMethods?.[0]==="*"?["GET","POST","PUT","PATCH","DELETE"]:i?.protectedMethods;for(let d of a){if(d==="POST"||d==="GET")n(`${r}`,d);if(d!=="POST")n(`${r}/:id`,d)}}}errors(e){(Array.isArray(e)?e:[e]).map((t)=>this.routesErrors={...this.routesErrors,...t})}}import{knex as L} from"knex";import{FsMigrations as ie} from"knex/lib/migrations/migrate/sources/fs-migrations";var{DB_HOST:re,DB_PORT:ne,DB_USER:oe,DB_PASSWORD:ae,DB_DATABASE:de,DB_SCHEMA:U,DB_POOL_MIN:le=1,DB_POOL_MAX:G,DB_WRITE_HOST:V,DB_WRITE_PORT:he,DB_WRITE_USER:ce,DB_WRITE_PASSWORD:ue,DB_WRITE_DATABASE:pe,DB_WRITE_SCHEMA:Q,DB_WRITE_POOL_MIN:fe=1,DB_WRITE_POOL_MAX:Y}=process.env;class j{db;dbWrite;dbTables;migrationDirs=[];intervalDbCheck;constructor(e){const{migrationDirs:s=[]}=e||{},t={host:re,user:oe,password:ae,database:de,port:Number(ne),...U&&{schema:U}},i={host:V,user:ce,password:ue,database:pe,port:Number(he),...Q&&{schema:Q}},r=G&&{min:+le,max:+G},n=Y&&{min:+fe,max:+Y},a={client:"pg",useNullAsDefault:!0};this.db=L({connection:t,...a,...r&&{pool:r}}),this.dbWrite=!V?this.db:L({connection:i,...a,...n&&{pool:n}}),this.migrationDirs=this.migrationDirs.concat(s).filter((d)=>Bun.file(d).size)}async waitDb(){return new Promise((e)=>{this.intervalDbCheck=setInterval(async()=>this.checkDb().then(e),5000),this.checkDb().then(e)})}async checkDb(){try{await this.db.raw("select 1+1 as result"),await this.dbWrite.raw("select 1+1 as result"),clearInterval(this.intervalDbCheck),console.log("DB connected");const e=new ie(this.migrationDirs,!1);await this.dbWrite.migrate.latest({migrationSource:e}),console.log("Migration done");const s=process.env.DB_TRGM_SIMILARITY_THRESHOLD||0.1;await this.db.raw(`SET pg_trgm.similarity_threshold = ${+s}`),await this.dbWrite.raw(`SET pg_trgm.similarity_threshold = ${+s}`),this.dbTables={...await this._getdbTables(this.dbWrite)},console.log(`Tables found: ${Object.keys(this.dbTables)}`)}catch(e){console.log("DB connection error:",e,"waiting for 5 seconds...")}}async _getdbTables(e){let s,t=[e.client.database()];switch(e.client.constructor.name){case"Client_MSSQL":s="SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema = \'public\' AND table_catalog = ?";break;case"Client_MySQL":case"Client_MySQL2":s="SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema = ?";break;case"Client_Oracle":case"Client_Oracledb":s="SELECT table_schema, table_name FROM user_tables",t=void 0;break;case"Client_PG":s="SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema NOT IN ('pg_catalog', 'information_schema')",t=void 0;break;case"Client_SQLite3":s="SELECT '' as table_schema, name AS table_name FROM sqlite_master WHERE type='table'",t=void 0;break;default:throw new Error("Unknown database")}const i=await e.raw(s,t),r=i.rows||i;let n;switch(e.client.constructor.name){case"Client_MSSQL":case"Client_MySQL":case"Client_MySQL2":case"Client_Oracle":case"Client_Oracledb":case"Client_SQLite3":n="";break;case"Client_PG":n=`SELECT
                    tc.table_schema, 
                    tc.constraint_name, 
                    tc.table_name, 
                    kcu.column_name, 
                    ccu.table_schema AS foreign_table_schema,
                    ccu.table_name AS foreign_table_name,
                    ccu.column_name AS foreign_column_name 
                FROM 
                    information_schema.table_constraints AS tc 
                    JOIN information_schema.key_column_usage AS kcu
                      ON tc.constraint_name = kcu.constraint_name
                      AND tc.table_schema = kcu.table_schema
                    JOIN information_schema.constraint_column_usage AS ccu
                      ON ccu.constraint_name = tc.constraint_name
                      AND ccu.table_schema = tc.table_schema
                WHERE tc.constraint_type = 'FOREIGN KEY'`;break;default:throw new Error("Unknown database")}let a=[];if(n){const o=await e.raw(n,t);a=o.rows||o}const d={};return await Promise.all(r.map(async({table_schema:o,table_name:l})=>{const h=`${o}.${l}`;if(e.client.constructor.name==="Client_PG"){const c=await e.raw("select * from information_schema.columns where table_name = :table_name and table_schema = :table_schema",{table_name:l,table_schema:o});d[`${h}`]=c.rows.reduce((p,u)=>({...p,[u.column_name]:u}),{});for(let p of Object.keys(d[`${h}`]))d[`${h}`][`${p}`].references=a.find((u)=>u.table_name===l&&u.column_name===p)}else d[`${h}`]=await e(l).withSchema(o).columnInfo()})),d}}import me from"jsonwebtoken";var ge=async(e,s)=>{const t=new Date;e.env.log=console.log,e.env.error=(p)=>{const{message:u}=p;let[R,g,y=""]=u.match(/^(\w+):?\s?(.*?)$/)||[,u];const S=e.env.getErrorByMessage(g);e.set("result",{error:!0,...S,name:g,additional:y})};const i=e.req.raw.headers.get("authorization")?.replace(/^bearer\s+/i,"");try{if(i)e.set("user",me.verify(i,process.env.JWT_SECRET||""))}catch{e.env.error({message:"NOT_FOUND"})}if(await s(),!e.var.result)e.env.error({message:"NOT_FOUND"});const{result:r,relations:n,meta:a,logId:d}=e.var,{error:o}=r,l=new Date,h=l.toISOString(),c=+l-+t;return e.json({result:r,relations:n,meta:a,error:o,requestTime:c,serverTime:h,logId:d})},k=new O;k.use("*",ge);k.errors({DEFAULT:{code:11,status:500,description:"An unexpected error occurred"},ACCESS_DENIED:{code:15,status:403,description:"Insufficient permissions"},NOT_FOUND:{code:21,status:404,description:"Not found"},INVALID_TOKEN:{code:25,status:401,description:"Invalid token. Try to renew it."},ERROR_QUERY_VALUE:{code:41,status:409,description:"Wrong value in query"}});var C=new O;C.use("*",async()=>{});import ye from"flattening";var we=async(e,s)=>{await s();const{result:t,relationsData:i}=e.var;if(!i||!t)return;const r={},n=async([a,d])=>{const o=new N(d),l=ye({result:t,relations:r}),h=new RegExp(`\\b${a}(\\.\\d+)?\$`),c=([g,y])=>g.match(h)&&y,p=[...new Set(Object.entries(l).map(c).filter(Boolean))];if(!p.length)return;const u=d.relationIdName||"id",{result:R}=await o.getRequestResult(e,{[u]:p});if(!r[`${a}`])r[`${a}`]={};for(let g of R){const y=g[`${u}`];r[`${a}`][`${y}`]=g}};await Promise.all(Object.entries(i).map(n)),e.set("relations",r)},W=new O;W.use("*",we);var{PORT:be=7788,DB_HOST:Ee,DB_WRITE_HOST:_e}=process.env;class K{app;db;dbWrite;dbTables;waitDb;roles;errors;routings;port;migrationDirs=[Te(`${import.meta.dir}/../src/migrations`)];constructor(e){const{routings:s,roles:t,port:i,migrationDirs:r}=e||{};if(this.app=new Re({router:new $e}),this.roles=t,this.routings=s||[],this.port=i||+be,r)this.migrationDirs=r}async init(){if(this._initErrorFlow(),Ee||_e){for(let{migrationDirs:s}of this.routings){if(!Array.isArray(s))continue;this.migrationDirs=this.migrationDirs.concat(s)}const e=new j({migrationDirs:this.migrationDirs});await e.waitDb(),this._initDbFlow(e)}this._initRoutes()}up(){return this.init(),{fetch:(e,s)=>this.app.fetch(e,{ip:s.requestIP(e)}),port:this.port}}async addRoutings(e){this.routings=this.routings.concat(e)}_initDbFlow(e){this.app.all("*",async(s,t)=>{if(!s.env)s.env={};s.env.db=e.db,s.env.dbWrite=e.dbWrite,s.env.dbTables=e.dbTables,await t()})}_initErrorFlow(){this.app.onError((e,s)=>s.env.error(e));for(let{routesErrors:e}of[k,W,...this.routings,C])this.errors={...this.errors,...e};this.app.all("*",async(e,s)=>{if(!e.env)e.env={};e.env.getErrorByMessage=(t)=>this.errors[`${t}`],e.env.roles=this.roles,await s()})}_initRoutes(){const e=new O;if(this.roles)e.use("*",this.roles.rolesMiddleware);const s=[k,e,W,...this.routings,C];for(let{routes:t,routesPermissions:i}of s)this.roles?.addRoutePermissions(i),t.map((r)=>r.method?this.app[`${r.method.toLowerCase()}`](r.path,...r.handlers):this.app.all(r.path,...r.handlers))}}export{K as TheAPI,O as Routings,j as Db};
